//Problem: web form needs to provide desired results//Solution: Add interactivity so the user can manage daily tasksvar taskImput = document.getElementById("new-task"); //new-taskvar addButton = document.getElementsByTagName("button")[0]; //first buttonvar incompleteTasksHolder = document.getElementById("incomplete-tasks");  //incomplete-tasks var completedTasksHolder = document.getElementById("completed-tasks"); //completed-tasks //Add a new taskvar addTask = function() {  console.log("add task...");  //When the button is pressed  //Create a new list item with the text from #new-task:  //input checkbox  //label  //input (text)  //button.edit  //button.delete  //Each element need to be modified and appended    }  //Edit an existing taskvar editTask = function() {  console.log("edit task...");  //When the edit button is pressed     //if the class of the parent is .editMode      //switch from .editMode      //label text become input's value    //else      //switch to .editMode       //input value becomes the label's text          //Toggle .editMode    }     //Delete an existing taskvar deleteTask = function() {  console.log("delete task...");  //When the delete button is pressed     //remove parent list item from the ul         } //Mark a task as completevar taskCompleted = function() {  console.log("complete task...");  //When the checkbox is checked     //Append the task list item to the #completed-tasks         }       //Mark a task as incompletevar taskInomplete = function() {  console.log("task incomplete...");  //When the checkbox is unchecked    //Append to #incomplete-tasks    }var bindTaskEvents = function(taskListItem, checkBoxEventHandler) {   //select it's children    //bind editTask to edit button    //bind deleteTask to delete button    //bind checkBoxEventHandler to checkbox}//Set the click handler to the addTask functionaddButton.onclick = addTask;//cycle over incompleteTasksHolder ul list items  //for each list item    //bind events to list items children (taskCompleted)    //cycle over completedTasksHolder ul list items  //for each list item    //bind events to list items children (taskIncomplete)